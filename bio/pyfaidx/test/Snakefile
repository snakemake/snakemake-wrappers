rule test_pyfaidx_out_fasta:
    input:
        fasta="sequence.fasta",
        bed="interval.bed",
    output:
        "retrieved.fasta",
    log:
        "test_pyfaidx.log",
    params:
        extra="",
        regions="",
    wrapper:
        "master/bio/pyfaidx"


rule test_pyfaidx_index_fasta:
    input:
        fasta="sequence.fasta",
        bed="interval.bed",
    output:
        "sequence.fasta.fai",
    log:
        "test_pyfaidx_index_fasta.log",
    params:
        extra="",
        regions="",
    wrapper:
        "master/bio/pyfaidx"


rule test_pyfaidx_out_sizes:
    input:
        fasta="sequence.fasta",
        bed="interval.bed",
    output:
        "retrieved.chrom",
    params:
        extra="",
        regions="",
    log:
        "test_pyfaidx_out_sizes.log",
    wrapper:
        "master/bio/pyfaidx"


rule test_pyfaidx_out_bed:
    input:
        fasta="sequence.fasta",
        bed="interval.bed",
    output:
        "retrieved.bed",
    params:
        extra="",
        regions="",
    log:
        "test_pyfaidx_out_bed.log",
    wrapper:
        "master/bio/pyfaidx"


rule test_pyfaidx_fetch_regions:
    input:
        #bed="interval.bed",
        fasta="sequence.fasta",
    output:
        "regions.fa",
    params:
        extra="",
        regions="seq1",
    log:
        "test_pyfaidx_fetch_regions.log",
    wrapper:
        "master/bio/pyfaidx"


rule test_pyfaidx_fetch_list_regions:
    input:
        #bed="interval.bed",
        fasta="sequence.fasta",
    output:
        "list_regions.fa",
    params:
        extra="",
        regions=["seq1", "seq2"],
    log:
        "test_pyfaidx_fetch_list_regions.log",
    wrapper:
        "master/bio/pyfaidx"
