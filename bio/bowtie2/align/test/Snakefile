rule test_bowtie2_sam:
    input:
        sample=["reads/{sample}.1.fastq", "reads/{sample}.2.fastq"],
        idx=multiext(
            "index/genome",
            ".1.bt2",
            ".2.bt2",
            ".3.bt2",
            ".4.bt2",
            ".rev.1.bt2",
            ".rev.2.bt2",
        ),
    output:
        "mapped_sam/{sample}.sam",
    log:
        "logs/bowtie2/mapped_sam_{sample}.log",
    threads: 8  # Use at least two threads
    wrapper:
        "master/bio/bowtie2/align"


use rule test_bowtie2_sam as test_bowtie2_se_gz with:
    input:
        sample=["reads/{sample}.1.fastq.gz"],
        idx=multiext(
            "index/genome",
            ".1.bt2",
            ".2.bt2",
            ".3.bt2",
            ".4.bt2",
            ".rev.1.bt2",
            ".rev.2.bt2",
        ),
    output:
        "mapped_se_gz/{sample}.bam",
    log:
        "logs/bowtie2/mapped_se_gz_{sample}.log",


use rule test_bowtie2_sam as test_bowtie2_extra_outputs with:
    output:
        "mapped_multi/{sample}.bam",
        idx="mapped_multi/{sample}.bam.bai",
        # metrics="mapped_multi/{sample}.metrics.txt",
        # unaligned=["mapped_multi/{sample}.unaligned.1.fq"],
        # unpaired="mapped_multi/{sample}.unpaired.fq"],
        # unconcordant="mapped_multi/{sample}.unconcordant.sam",
        # concordant="mapped_multi/{sample}.concordant.sam",
    log:
        "logs/bowtie2/mapped_multi_{sample}.log",
    params:
        sort_program="samtools",


use rule test_bowtie2_sam as test_bowtie2_cram with:
    input:
        sample=["reads/{sample}.1.fastq", "reads/{sample}.2.fastq"],
        idx=multiext(
            "index/genome",
            ".1.bt2",
            ".2.bt2",
            ".3.bt2",
            ".4.bt2",
            ".rev.1.bt2",
            ".rev.2.bt2",
        ),
        ref="genome.fasta",
        ref_fai="genome.fasta.fai",
    output:
        "mapped_cram/{sample}.cram",
    log:
        "logs/bowtie2/samtools_cram_{sample}.log",


use rule test_bowtie2_sam as test_bowtie2_sort_samtools with:
    output:
        "mapped_samtools/{sample}.bam",
    log:
        "logs/bowtie2/mapped_samtools_{sample}.log",
    params:
        sort_program="samtools"


use rule test_bowtie2_sam as test_bowtie2_sort_picard with:
    output:
        "mapped_picard/{sample}.bam",
    log:
        "logs/bowtie2/mapped_picard_{sample}.log",
    params:
        sort_program="picard"
