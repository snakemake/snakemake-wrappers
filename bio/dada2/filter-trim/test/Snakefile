rule dada2_filter_trim_se:
    input:
        # Single-end files without primers sequences
        fwd="trimmed/{sample}.1.fastq"
    output:
        filt="filtered-se/{sample}.1.fastq",
        stats="reports/dada2/filter-trim-se/{sample}.tsv"
    log:
        "logs/dada2/filter-trim-se/{sample}.log"
    # Even though this is an R wrapper, use named arguments in Python syntax
    # here, to specify extra parameters. Python booleans (`arg1=True`, `arg2=False`)
    # and lists (`list_arg=[]`) are automatically converted to R.
    # For a named list as an extra named arguments, use a python dict
    #   (`named_list={name1=arg1}`).
    params:
        maxEE=1, truncLen=7, minLen=1
        # Set the number of kept bases to 7 for the toy example
        # Set minLen to 1 for the toy example but default is 20
    threads: 1 # set desired number of threads here
    wrapper:
        "master/bio/dada2/filter-trim"

rule dada2_filter_trim_pe:
    input:
        # Paired-end files without primers sequences
        fwd="trimmed/{sample}.1.fastq",
        rev="trimmed/{sample}.2.fastq"
    output:
        filt="filtered-pe/{sample}.1.fastq",
        filt_rev="filtered-pe{sample}.2.fastq",
        stats="reports/dada2/filter-trim-pe/{sample}.tsv"
    log:
        "logs/dada2/filter-trim-pe/{sample}.log"
    # Even though this is an R wrapper, use named arguments in Python syntax
    # here, to specify extra parameters. Python booleans (`arg1=True`, `arg2=False`)
    # and lists (`list_arg=[]`) are automatically converted to R.
    # For a named list as an extra named arguments, use a python dict
    #   (`named_list={name1=arg1}`).
    params:
        maxEE=1, truncLen=[7,6], minLen=1
        # Set the number of kept bases to 7 for the toy example
        # Set minLen to 1 for the toy example but default is 20
    threads: 1 # set desired number of threads here
    wrapper:
        "master/bio/dada2/filter-trim"
