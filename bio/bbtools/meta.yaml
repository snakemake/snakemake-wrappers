name: Generic
url: https://jgi.doe.gov/data-and-tools/software-tools/bbtools/bb-tools-user-guide/
description: |
  Generic wrapper for BBTools. One pattern to run them all.
authors:
  - Silas Kieser
input:
  - input: All keywords in input are passed to the bbtool as key=value pairs. A special case is 'input' see in the notes.
  - flag: The keyword 'flag' is ignored and allows to make input files that are not processed by the bbtool. All other input are passed to the bbtool as key=value pairs
output:
  - out: All keywords in output are passed to the bbtool as key=value pairs. A special case is 'out' see in the notes. All other outputs are passed to the bbtool as key=value pairs
params:
  - command: Required parameter defining the command to be used e.g. 'bbmap.sh'
  - extra: additional program arguments. All other parameters are passed to the bbtool as key=value pairs
notes: |
  This wrapper allows to run any of the bbtools. The command is defined by the 'command' parameter, which is required.
  **All keywords in input, output, params are passed as key value pairs to the command!**
  Take care that they are valid for the bbtool.

  As it it not possible to define 'in' as a keyword, the keyword 'input' is used instead. Allowed aliases are 'sample' and 'reads', but we recommend to use 'input'.
  If exactly two files are provides for 'input' or 'out' the wrapper parses them as in1, in2 or out1, out2, respectively.

  For all parameters, if more than two files are provided, the wrapper parses them as key=value1,value2,value3... 

  Limitations:
    - The wrapper cannot run bbwrap with paired + singleton files. But this is a rare use case.


  Certainly! Here are three lists of shell scripts extracted from the provided information:

  ### List of all the tools in the bbtools suite 39.01

  In theory all of them are sported by this wrapper, but we didn't test them all.
  Scripts with different input/output might not supported by this wrapper.

  - bbmap.sh
  - removehuman.sh
  - removehuman2.sh
  - mapnt.sh
  - mapPacBio.sh
  - bbmapskimmer.sh
  - bbsplit.sh
  - bbwrap.sh
  - pileup.sh
  - summarizescafstats.sh
  - filterbycoverage.sh
  - mergeOTUs.sh
  - bbest.sh
  - postfilter.sh
  - bbduk.sh
  - bbduk2.sh
  - seal.sh
  - summarizeseal.sh
  - loglog.sh
  - kmercountexact.sh
  - bbnorm.sh
  - ecc.sh
  - khist.sh
  - bbcountunique.sh
  - commonkmers.sh
  - kmercoverage.sh
  - callpeaks.sh
  - tadpole.sh
  - tadwrapper.sh
  - kcompress.sh
  - stats.sh
  - statswrapper.sh
  - countgc.sh
  - fungalrelease.sh
  - filterbytaxa.sh
  - gi2taxid.sh
  - gitable.sh
  - sortbytaxa.sh
  - splitbytaxa.sh
  - taxonomy.sh
  - taxtree.sh
  - reducesilva.sh
  - synthmda.sh
  - crosscontaminate.sh
  - decontaminate.sh
  - crossblock.sh
  - dedupe.sh
  - dedupe2.sh
  - dedupebymapping.sh
  - clumpify.sh
  - bbmerge.sh
  - bbmerge-auto.sh
  - bbmergegapped.sh
  - randomreads.sh
  - bbfakereads.sh
  - gradesam.sh
  - samtoroc.sh
  - addadapters.sh
  - grademerge.sh
  - printtime.sh
  - msa.sh
  - cutprimers.sh
  - idmatrix.sh
  - matrixtocolumns.sh
  - countbarcodes.sh
  - filterbarcodes.sh
  - mergebarcodes.sh
  - removebadbarcodes.sh
  - demuxbyname.sh
  - filterbysequence.sh
  - filterbyname.sh
  - filtersubs.sh
  - getreads.sh
  - estherfilter.sh
  - bbqc.sh
  - rqcfilter.sh
  - shred.sh
  - fuse.sh
  - shuffle.sh
  - calcmem.sh
  - textfile.sh
  - countsharedlines.sh
  - filterlines.sh
  - a_sample_mt.sh
  - bbmask.sh
  - calctruequality.sh
  - makechimeras.sh
  - phylip2fasta.sh
  - readlength.sh
  - reformat.sh
  - removesmartbell.sh
  - rename.sh
  - repair.sh
  - bbsplitpairs.sh
  - splitnextera.sh
  - splitsam.sh
  - testformat.sh
  - translate6frames.sh
