name: quarto
description: Render quarto markdown documents
url: https://github.com/quarto-dev/quarto-r
authors:
  -Vito Zanotelli
input:
  - script: > 
      Quarto script to render (.qmd).
      - The script must follow the following rules:
        - If parameters are used (extra arguments in `input`, `output`, `params`)
          they must be defined in the quarto header as params: https://quarto.org/docs/computations/parameters.html#knitr
        - resources passed to the script must be defined in the quarto header as `resources_` followed by the resource name.
          Eg `resources_mem` entry in the quarto header would cause the `sm.resources.mem` passed to the quarto script.
          Threads will be passed if a parameter `resources_threads` is defined in the quarto header.
        - All dependencies used in the script must either be:
          - installed in the `renv` declared as `input.renv` (see `input.renv` documentation)
          - installed in the conda environment used to run this wrapper. If this is customized, use
            the `conda: ` parameter to overwrite the default conda environment.
  - renv: >
      Optional:
      Path a folder containing restored `renv` environment or a file within
      (eg `.Rprofile`, `renv.lock`). If this is used the `renv` must
      contain a full `quarto` installation.
      Note that the R version depends on the conda environment used in the wrapper.
      If this needs to be changed, change the `conda:` parameter to point to an
      appropriate conda environment.
      Default: the project root directory
  - additional_inputs: >
      Additional input files. These the paths will be passed as `-P <additional_inputs>:<value>` to the quarto script
      and need to be defined in the quarto header as params: https://quarto.org/docs/computations/parameters.html#knitr
output:
  - report: >
      Optional:
      Path to the rendered report. The file extension will be used to determine the output format (eg `report.html`, `report.docx`).
      PDF rendering is currently not supported due to the lack of support of tinytex in conda-forge.
      If not provided, the report will be rendered in a temporary directory and no output will be returned.
  - additional_outputs: >
      Additional output files. These the paths will be passed as `-P <additional_outputs>:<value>` to the quarto script
      and need to be defined in the quarto header as params: https://quarto.org/docs/computations/parameters.html#knitr
params:
  - additional_params: >
      Additional parameters to be passed to the quarto script. These the paths will be passed as `-P <additional_params>:<value>` to the quarto script
      and need to be defined in the quarto header as params: https://quarto.org/docs/computations/parameters.html#knitr
  This wrapper runs quarto to render markdown .qmd notebooks.
  The wrapper supports r-package management via `conda` and `renv`:
  - For `conda` overwrite the conda environment from the `conda:` directive of the rule with an environement with
  the r dependencies as well as `r-quarto` installed.
  - For `renv` restore an environment before and point the `input.renv`
  to the environment folder or a file within (eg `.Rprofile`). The r-version needs used to build the `renv` needs to match
  the one of the wrapper or the environment of the wrapper needs to be overwritten with via `conda:` with a matching `r-base`
  installation.
  PDF rendering is currently not working as tinytex is not properly supported in `conda`.